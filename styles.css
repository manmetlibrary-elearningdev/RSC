/* --- Custom Properties Definition --- */
:root {
    /* Basic Color palette */
    --navy: navy;
    --bg-light: #f9f9f9;
    --card-bg: #fffde7;
    --card-border: #d1c8b9;
    --shadow-light: rgba(0, 0, 0, 0.1);
    --highlight-yellow: #FFCD00;
    --green-feedback: #a8e6cf;
    --red-feedback: #ff8a80;
    --icon-green: #005500;
    --icon-red: #550000;
    --button-navy: navy;
    --button-hover: #4a4a8a;
    --button-focus: #00c1d4;
}

/* --- Header Styles --- */
h1 {
    font-family: 'Helvetica', sans-serif;
    color: var(--navy);
    font-size: 2em;
    margin-top: 0;
}

/* --- Global Styles --- */
/* Default font and background for the body */
body {
    font-family: 'Helvetica', sans-serif;
    background-color: var(--bg-light); 
    color: var(--navy);
    margin: 0;
    padding: 20px;
}

/* --- Card Styles --- */
.card {
    /* Basic positioning and spacing */
    position: relative;
    padding: 15px;
    padding-right: 40px;
    margin: 10px;
    display: inline-block;
    
    /* Visual styles */
    cursor: pointer;
    background-color: var(--card-bg);
    border: 1px solid var(--card-border); 
    border-radius: 5px;
    box-shadow: 0 4px 6px var(--shadow-light);
    outline: none;
    transition: background-color 0.3s, box-shadow 0.3s;
}

.icon {
    /* Positioning for icon inside card */
    position: absolute;
    top: 50%;  
    right: 10px; 
    transform: translateY(-50%);
    font-size: 1.5em;
    
    /* Default state is hidden */
   // display: none;
}

/* Display specific icons based on feedback type */
.green .icon.tick, .red .icon.cross {
    display: block;
}

.green .icon.tick {
    color: var(--icon-green);
    right: 10px;
}

.red .icon.cross {
    color: var(--icon-red);
    right: 10px;
}

/* Card hover effect */
.card:hover {
    background-color: var(--highlight-yellow);
    box-shadow: 0 6px 10px var(--shadow-light);
}

/* Card feedback color backgrounds */
.green {
    background-color: var(--green-feedback);
    border: 1px solid var(--card-border);
    box-shadow: 0 4px 6px var(--shadow-light);
}

.red {
    background-color: var(--red-feedback);
    border: 1px solid var(--card-border);
    box-shadow: 0 4px 6px var(--shadow-light);
}

/* Styles for the selected card state */
.selected {
    background-color: var(--highlight-yellow);
    border: 2px solid var(--card-border);
    box-shadow: 0px 0px 10px 4px rgba(217, 210, 178, 0.5);
}

/* Style for unselectable card */
.unselectable-card {
    pointer-events: none;  
}

/* Feedback message styles */
#feedback {
    margin-top: 20px;
    font-weight: bold;
    font-size: 1.1em;
}

/* Global focus styles */
:focus {
    outline: 2px solid var(--highlight-yellow);
}

/* Disable hover and select styles after feedback is given */
.feedback-given .card:hover,
.feedback-given .card.selected {
    background-color: var(--card-bg); /* Reset the background to its default */
    box-shadow: 0 4px 6px var(--shadow-light); /* Reset the box-shadow to its default */
    border: 1px solid var(--card-border); /* Reset the border to its default */
}




/* --- Button Styles --- */
#buttonContainer {
    display: flex;
    justify-content: space-between;
    margin-top: 20px;
}

button {
    flex: 1;
    padding: 10px 15px;
    margin-right: 10px;
    border: none;
    background-color: var(--button-navy);
    color: white;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.2s;
    max-width: 200px;
}

button:last-child {
    margin-right: 0;
}

button:hover {
    background-color: var(--button-hover);
}

button:focus {
    border: 2px solid var(--button-focus);
}

/* Container for content */
.content-container {
    width: 100%;
}

/* --- Media Queries for Responsiveness --- */
@media only screen and (max-width: 768px) {
    /* Adjust card styles for mobile view */
    .card {
        display: block;
        width: 100%;
        box-sizing: border-box;
        margin-bottom: 10px;
    }

    .card:last-child {
        margin-bottom: 0;
    }
}
